%newfile new<fileName>.idl

//typedef octet GuidPrefix_t[12];
	

    struct EntityId_t
    {
        //octet entityKey[3];
		string<24> entityKey;
        octet entityKind;
    };

    struct GUID_t
    {
        //GuidPrefix_t guidPrefix;
		string<100> guidPrefix;
        EntityId_t entityId;
    };

    struct SequenceNumber_t
    {
        long high;
        unsigned long low;
    };

    struct SampleIdentity
    {
        GUID_t writer_guid;
        SequenceNumber_t sequence_number;
    };
        typedef octet UnknownOperation;
        typedef octet UnknownException;
        typedef octet UnusedMember;

        enum RemoteExceptionCode_t
        {
            REMOTE_EX_OK,
            REMOTE_EX_UNSUPPORTED,
            REMOTE_EX_INVALID_ARGUMENT,
            REMOTE_EX_OUT_OF_RESOURCES,
            REMOTE_EX_UNKNOWN_OPERATION,
            REMOTE_EX_UNKNOWN_EXCEPTION
        };

        struct RequestHeader
        {
            SampleIdentity requestId;
            string<255> instanceName;
        };

        
        struct ReplyHeader
        {
            SampleIdentity relatedRequestId;
            RemoteExceptionCode_t remoteEx;
        };

%interface
%operation
const long <interfaceName>_<operationName>_Hash = HASH("<operationName>");

struct <interfaceName>_<operationName>_In{
%param:IN
	<paramType> <paramName>;
%%
%param:INOUT
	<paramType> <paramName>;
%%
};

struct <interfaceName>_<operationName>_Out{
%param:OUT
	<paramType> <paramName>;
%%
%param:INOUT
	<paramType> <paramName>;
%%
%return
	<returnType> return_;
%%
};

struct <interfaceName>_<operationName>_Result{
	<interfaceName>_<operationName>_Out result;
};

%%
struct <interfaceName>_Call{
	long switchUnion;
%operation
	<interfaceName>_<operationName>_In <operationName>;
%%
	UnknownOperation unknowOp;
};

struct <interfaceName>_Request{
	RequestHeader header;
	<interfaceName>_Call data;
};

struct <interfaceName>_Return{
	long switchUnion;
%operation
	<interfaceName>_<operationName>_Result <operationName>;
%%
};

struct <interfaceName>_Reply{
	ReplyHeader header;
	<interfaceName>_Return data;
};

%%